# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Check PHP"

on:
  workflow_call:
    # see https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow
    inputs:
      composerRequire:
        required: false
        type: string
      composerRequireDev:
        required: false
        type: string
      phpVersion:
        required: false
        type: string
        default: "8.1"

jobs:
  coding-standards:
    name: "Coding Standard"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ inputs.phpVersion }}"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress"

      - name: "ECS"
        run: "composer lint:check"

      - name: "Rector"
        run: "composer lint:upgrade:check"

  static-analysis:
    name: "PHPStan"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        dependencies:
          - "lowest"
          - "highest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ inputs.phpVersion }}"
          extensions: mbstring
          tools: composer:v2

      - name: "Require dev before install"
        if: ${{ inputs.composerRequireDev != '' }}
        run: "composer require --dev ${{ inputs.composerRequireDev }}"
      
      - name: "Require before install"
        if: ${{ inputs.composerRequire != '' }}
        run: "composer require ${{ inputs.composerRequire }}"
        
      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress"

      - name: "PHPStan"
        run: "composer lint:stan"
